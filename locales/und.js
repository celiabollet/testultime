__resolveJsonp("course:und","{"course":{"id":"_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto","originalId":null,"author":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","selectedAuthorId":"","color":"#00ffa3","navigationMode":"","title":"Formation pour coachs en prise de masse","sharePassword":"","description":"Cette formation vise à rendre les coachs pleinement opérationnels pour accompagner des clients en prise de masse. Les participants apprendront à élaborer des plans nutritionnels efficaces, à ajuster les régimes alimentaires en fonction des besoins individuels, et à optimiser l'apport en macronutriments pour maximiser les gains musculaires. Conçue pour les coachs de tous niveaux, cette formation offre des stratégies pratiques et des techniques avancées pour améliorer les performances des clients. À la fin du cours, les coachs seront capables de fournir un accompagnement personnalisé et de haute qualité, garantissant des résultats optimaux pour leurs clients.","shareId":"oBGvW4G_mT9Wl_ZioI-a6BurF_euVDAm","copyOf":"","order":"1732202751284","fonts":null,"media":{},"coverImage":{"media":{"image":{"key":"rise/courses/_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto/AVReDgZTT-xyPZPR-programme-nutrition-prise-de-masse.jpg","crushedKey":"MbvWYk9Dyh6v7cAZ.jpg","dimensions":{"originalWidth":660,"originalHeight":440},"originalUrl":"programme-nutrition-prise-de-masse.jpg","sourcedFrom":"USER","useCrushedKey":true,"src":"https://cdn.articulate.com/assets/rise/assets/themes/organic/cover-image/cover-image-0.jpg"}}},"lessons":[{"id":"cm3rasdyf00023b7azstaeq7g","originalId":null,"author":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","selectedAuthorId":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","courseId":"_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto","title":"Introduction au programme Prise de Masse","description":"","type":"blocks","icon":"Article","items":[{"id":"cm3rau14a00073b7a0e48n5sx","data":{},"type":"interactive","items":[{"id":"8be5cd9e-d264-41eb-b29a-c97bd3f1a005","type":"intro","media":{},"title":"Principes fondamentaux de la prise de masse","isHidden":false,"settings":[],"description":"<p>La prise de masse est un processus complexe qui nécessite une compréhension approfondie de plusieurs facteurs clés. Dans cette section, nous allons explorer les principes fondamentaux qui vous aideront à réussir votre programme de prise de masse.</p>"},{"id":"926103a1-fdec-47fd-a74e-74df3cc327db","type":"step","media":{},"title":"Qu'est-ce que la prise de masse","isHidden":false,"settings":[],"description":"<p>La prise de masse consiste à augmenter la masse musculaire tout en minimisant le gain de graisse. Cela nécessite une approche équilibrée qui combine une alimentation riche en nutriments et un programme d'entraînement adapté. Il est important de comprendre que la prise de masse ne se résume pas à consommer plus de calories, mais à consommer les bonnes calories.</p><p>Un bon programme de prise de masse doit inclure des objectifs clairs et mesurables. Cela permet de suivre les progrès et d'ajuster les stratégies en fonction des résultats obtenus. La patience et la persévérance sont essentielles, car la prise de masse est un processus qui prend du temps.</p>"},{"id":"f16c6008-5986-41ba-830d-09ba278cd984","type":"step","media":{},"title":"Nutrition adaptée","isHidden":false,"settings":[],"description":"<p>La nutrition joue un rôle crucial dans la prise de masse. Il est essentiel de consommer suffisamment de protéines pour soutenir la croissance musculaire. Les glucides et les lipides doivent également être inclus dans l'alimentation pour fournir l'énergie nécessaire aux entraînements intensifs.</p><p>Il est recommandé de répartir les repas tout au long de la journée pour maintenir un apport constant en nutriments. Les collations riches en protéines peuvent aider à atteindre les objectifs caloriques quotidiens. L'hydratation est également importante pour optimiser les performances et la récupération.</p>"},{"id":"365a6bac-b020-44a5-a674-047f80b49693","type":"step","media":{},"title":"Plan d'entraînement efficace","isHidden":false,"settings":[],"description":"<p>Un plan d'entraînement efficace est essentiel pour stimuler la croissance musculaire. Il doit inclure des exercices de résistance qui ciblent tous les groupes musculaires. Les techniques d'intensification, comme les supersets et les dropsets, peuvent être utilisées pour maximiser les gains musculaires.</p><p>Il est important de varier les exercices et les routines pour éviter la stagnation. L'entraînement doit être progressif, en augmentant progressivement les charges et l'intensité. Le repos et la récupération sont tout aussi importants pour permettre aux muscles de se reconstruire et de se renforcer.</p>"},{"id":"97d8b690-6e84-40a6-a858-23e412a89530","type":"step","media":{},"title":"Suivi et ajustements","isHidden":false,"settings":[],"description":"<p>Le suivi régulier des progrès est crucial pour une prise de masse réussie. Il est important de mesurer les changements de poids, de tour de taille et de composition corporelle. Ces données permettent d'ajuster le programme en fonction des résultats obtenus.</p><p>Les ajustements peuvent inclure des modifications de l'alimentation, de l'entraînement ou des deux. Il est également utile de consulter un coach ou un nutritionniste pour obtenir des conseils personnalisés. La flexibilité et l'adaptabilité sont essentielles pour surmonter les obstacles et continuer à progresser.</p>"},{"id":"375fc455-64ec-4e82-a9e0-ad85d68ae788","type":"summary","media":{},"title":"Résumé des points clés","isHidden":false,"settings":[],"description":"<p>En résumé, la prise de masse nécessite une approche équilibrée qui combine une nutrition adaptée, un plan d'entraînement efficace et un suivi régulier. En comprenant et en appliquant ces principes, vous serez en mesure de maximiser vos gains musculaires et d'atteindre vos objectifs de prise de masse.</p>"}],"family":"interactive-fullscreen","variant":"process","settings":{"cardMode":"WHITE","mediaWidth":"1","paddingTop":3,"zoomOnClick":true,"quotesInline":false,"paddingBottom":3,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"#f5f5f5","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}},{"id":"cm3raws5t001u3b7a4ta3ue69","data":{},"type":"multimedia","items":[{"id":"cm3raws5u001v3b7aq8k3h7hw","media":{"embed":{"src":"<iframe title=\"Copie - 1. ONBOARDING COACH - Module 1 Role et missions du coach\" frameborder=\"0\" width=\"1200\" height=\"675\" src=\"https://view.genially.com/673afa0aabc805bb3a686cf7\" allowfullscreen=\"true\" scrolling=\"yes\"></iframe>","type":"embed","embedType":"iframe","originalUrl":"<iframe title=\"Copie - 1. ONBOARDING COACH - Module 1 Role et missions du coach\" frameborder=\"0\" width=\"1200\" height=\"675\" src=\"https://view.genially.com/673afa0aabc805bb3a686cf7\" allowfullscreen=\"true\" scrolling=\"yes\"></iframe>"}}}],"family":"multimedia","variant":"embed","settings":{"v":2,"cardMode":"WHITE","mediaWidth":"1","paddingTop":3,"showBorder":false,"accentColor":null,"quotesInline":false,"paddingBottom":3,"paddingLinked":true,"backgroundType":"LIGHT","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}}],"media":{},"piles":[],"settings":{},"duplicatedFromId":"","deleted":false,"createdAt":"2024-11-21T12:37:45.358Z","updatedAt":"2024-11-21T12:47:50.592Z","lastUpdatedBy":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","ready":true,"position":0,"transferredAt":null,"isPartnerContentAuthor":null,"headerImage":{},"sourceLessonLocaleId":null,"experiments":null,"description_vNext":"","title_vNext":"Introduction au programme Prise de Masse"},{"id":"cm3rasdyf00033b7a5dluf0uc","originalId":null,"author":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","selectedAuthorId":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","courseId":"_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto","title":"Nutrition pour la Prise de Masse","description":"","type":"blocks","icon":"Article","items":[{"id":"cm3rb65el003u3b7alv5mtboh","data":{},"type":"multimedia","items":[{"id":"cm3rb65em003v3b7a2sr6r5e6","media":{"video":{"key":"QRZ2UHK7ALQYE1E9.mp4","url":"transcoded-i3VeaCZDC6nK-yJM-QRZ2UHK7ALQYE1E9.mp4","type":"video","poster":"QRZ2UHK7ALQYE1E9.jpg","duration":76,"inputKey":"rise/courses/_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto/i3VeaCZDC6nK-yJM-QRZ2UHK7ALQYE1E9.mp4","thumbnail":"https://images.articulate.com/f:jpg,b:fff,w:100,h:100,s:cover/rise/courses/_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto/transcoded-i3VeaCZDC6nK-yJM-QRZ2UHK7ALQYE1E9.0000000.jpg","originalUrl":"QRZ2UHK7ALQYE1E9.mp4","transcodeId":"1732200275407-u86d7j"}},"caption":""}],"family":"multimedia","variant":"video","settings":{"cardMode":"WHITE","paddingTop":3,"quotesInline":false,"paddingBottom":3,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}},{"id":"cm3rdqss0004q3b7al6y83esx","data":{},"type":"interactive","items":[{"id":"b8a08ee5-49d7-48b9-b949-99859c41fd54","title":"Protéines","description":"<p>Les protéines sont essentielles pour la croissance et la réparation des tissus musculaires. Elles sont composées d'acides aminés, qui sont les blocs de construction des muscles. Les sources de protéines incluent la viande, le poisson, les œufs et les légumineuses.</p><p></p><p>Il est important de consommer des protéines de haute qualité pour maximiser la synthèse musculaire. Les protéines animales sont généralement considérées comme complètes, car elles contiennent tous les acides aminés essentiels. Les végétariens peuvent combiner différentes sources végétales pour obtenir un profil complet d'acides aminés.</p>"},{"id":"24dd5b77-743e-455c-bbbe-2284371279ea","title":"Glucides","description":"<p>Les glucides sont la principale source d'énergie pour le corps, en particulier pendant les exercices intenses. Ils sont stockés sous forme de glycogène dans les muscles et le foie. Les glucides peuvent être classés en simples et complexes, selon leur structure chimique.</p><p></p><p>Les glucides complexes, comme les céréales complètes et les légumes, sont digérés plus lentement et fournissent une énergie soutenue. Les glucides simples, comme les fruits et les sucreries, sont digérés rapidement et peuvent fournir un coup de pouce rapide d'énergie. Il est crucial de consommer des glucides autour de l'entraînement pour optimiser la performance et la récupération.</p>"},{"id":"a855966a-9e38-4b20-8946-144864a937d3","title":"Lipides","description":"<p>Les lipides, ou graisses, sont une source d'énergie concentrée et jouent un rôle crucial dans la production d'hormones et l'absorption des vitamines liposolubles. Ils peuvent être classés en graisses saturées, insaturées et trans. Les graisses insaturées, trouvées dans les avocats, les noix et les huiles végétales, sont bénéfiques pour la santé cardiovasculaire.</p><p></p><p>Les graisses saturées, présentes dans les produits animaux et certains produits transformés, doivent être consommées avec modération. Les graisses trans, souvent trouvées dans les aliments frits et les produits de boulangerie, devraient être évitées autant que possible. Un équilibre adéquat de graisses dans l'alimentation est essentiel pour une santé optimale et une performance physique.</p>"},{"id":"a3e5028d-980e-4de3-a3ed-69d8c849f0c1","title":"Vitamines","description":"<p>Les vitamines sont des micronutriments essentiels qui jouent un rôle vital dans de nombreuses fonctions corporelles, y compris le métabolisme énergétique, la fonction immunitaire et la santé des os. Elles sont classées en vitamines hydrosolubles et liposolubles. Les vitamines hydrosolubles, comme la vitamine C et les vitamines B, doivent être consommées régulièrement car elles ne sont pas stockées dans le corps.</p><p></p><p>Les vitamines liposolubles, comme les vitamines A, D, E et K, sont stockées dans les graisses corporelles et peuvent être consommées en quantités plus importantes. Une alimentation variée et équilibrée est la meilleure façon de s'assurer que l'on obtient toutes les vitamines nécessaires pour une santé optimale.</p>"},{"id":"7693064f-7e34-4ac3-80da-5878f6188bf8","title":"Minéraux","description":"<p>Les minéraux sont des micronutriments essentiels qui jouent un rôle crucial dans de nombreuses fonctions corporelles, y compris la contraction musculaire, la transmission nerveuse et la santé osseuse. Les minéraux peuvent être classés en macro-minéraux, comme le calcium et le magnésium, et en oligo-éléments, comme le fer et le zinc.</p><p></p><p>Les macro-minéraux sont nécessaires en plus grandes quantités et sont essentiels pour des fonctions corporelles de base. Les oligo-éléments, bien que nécessaires en plus petites quantités, sont tout aussi importants pour la santé. Une alimentation riche en fruits, légumes, noix et graines peut aider à garantir un apport adéquat en minéraux.</p>"}],"family":"interactive","variant":"tabs","settings":{"cardMode":"WHITE","paddingTop":3,"zoomOnClick":true,"quotesInline":false,"paddingBottom":3,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}},{"id":"cm3rdsc1p005c3b7azso78hje","data":{},"type":"interactive","items":[{"id":"08b2ac52-53cb-450e-b39f-200af1b2daf6","title":"Fondations PDM Nutrition","description":"<p>Pour une prise de masse efficace, il est crucial de respecter l'équilibre de l'assiette. Cela signifie inclure une source de protéines, des féculents et des légumes verts dans chaque repas. Les protéines peuvent provenir de viandes, œufs, poissons ou légumineuses.</p><p></p><p>Les féculents comme les pâtes, le riz et les patates fournissent l'énergie nécessaire pour les entraînements. Les légumes verts apportent des fibres et des vitamines essentielles. Se référer aux idées recettes et shakers disponibles dans l'espace formation PapaInShape pour plus de détails.</p>"},{"id":"81ca036c-7e13-4cab-b158-c45032ac25e4","title":"Surplus Calorique","description":"<p>Le surplus calorique est essentiel pour la prise de masse. Il s'agit de consommer plus de calories que ce que votre corps brûle au quotidien. Cela permet de fournir l'énergie nécessaire pour construire du muscle.</p><p></p><p>Il est important de choisir des aliments de qualité pour ce surplus, en privilégiant les protéines, les glucides complexes et les graisses saines. Suivre un plan nutritionnel structuré aide à atteindre ces objectifs de manière efficace.</p>"},{"id":"a54d9a21-daec-4712-9181-6010fee69558","title":"Timing des Nutriments","description":"<p>Le timing des nutriments joue un rôle crucial dans la prise de masse. Consommer des glucides à IG élevé avant et après l'entraînement peut améliorer les performances et la récupération. Avant l'effort, ils fournissent un boost d'énergie.</p><p></p><p>Après l'entraînement, ils aident à reconstituer les réserves de glycogène et à améliorer l'assimilation des protéines. Des exemples de glucides à IG élevé incluent les dattes, le miel et les bonbons Haribo.</p>"},{"id":"e9d1fff4-329a-4f1e-8f15-db444b90a411","title":"Collations Protéinées","description":"<p>Les collations protéinées sont essentielles pour maintenir un apport constant en protéines tout au long de la journée. Elles aident à la récupération musculaire et à la croissance. Des exemples de collations incluent les shakes de whey, les yaourts grecs et les barres protéinées.</p><p></p><p>Il est recommandé de consommer une collation protéinée après l'entraînement et entre les repas principaux. Cela permet de maintenir un niveau élevé de synthèse protéique et d'optimiser la prise de masse.</p>"},{"id":"19ec0cd4-f930-43e4-9bfd-ed5676df0f97","title":"Index Glycémique","description":"<p>L'index glycémique (IG) mesure la vitesse à laquelle les glucides augmentent le taux de sucre dans le sang. Les glucides à IG bas ou modéré sont préférables pour une énergie soutenue. Ils incluent les légumes, les grains entiers et les légumineuses.</p><p></p><p>Les glucides à IG élevé, comme les bonbons et les jus de fruits, sont mieux consommés autour des entraînements. Comprendre l'IG aide à planifier les repas pour maximiser l'énergie et la récupération.</p>"},{"id":"09370b42-ad7e-4dd0-b1ff-d9a37c564a06","title":"Importance du Sommeil","description":"<p>Le sommeil est crucial pour la récupération et la croissance musculaire. Pendant la nuit, le corps sécrète des hormones anabolisantes qui aident à la réparation des tissus musculaires. Un bon sommeil améliore également les performances et la concentration.</p><p></p><p>Il est recommandé de dormir entre 7 et 9 heures par nuit. Pour améliorer la qualité du sommeil, évitez les écrans avant de dormir et créez une routine de coucher relaxante.</p>"}],"family":"interactive","variant":"accordion","settings":{"cardMode":"WHITE","paddingTop":3,"zoomOnClick":true,"quotesInline":false,"paddingBottom":3,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}},{"id":"cm3rfcvvc009w3b7ahn8wsu93","data":{},"type":"text","items":[{"id":"cm3rfcvvg00a43b7awyiiwl5b","heading":"<div data-editor-id=\"b62ef00b-fdcb-4abf-8680-e659e2a73d94\"><p><strong>Exemples de repas et d'assiettes</strong></p></div>"}],"family":"text","variant":"heading","settings":{"cardMode":"WHITE","paddingTop":3,"quotesInline":false,"paddingBottom":0,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}},{"id":"cm3rdu03v00633b7abbmpjb58","data":{},"type":"interactive","items":[{"id":"yhfzleyy8dmgdjo07i83bewm","back":{"media":{},"description":"<div data-editor-id=\"6c7e11db-aa5d-4fa6-a3ae-a6253de16399\"><p>1/3 protéines (viande, œufs...), 1/3 féculents (riz, pâtes...), 1/3 légumes (brocoli, haricots...).</p></div>"},"front":{"media":{},"description":"<div data-editor-id=\"587c8bd3-13d7-427b-bf08-dabc520c4120\"><p>Assiette équilibrée</p></div>"}},{"id":"qysncg0chbahxikchghukqkp","back":{"type":"description","media":{},"description":"2-3 œufs, 2 tranches de pain complet, fromage frais, avocat, flocons d'avoine, fruits, oléagineux."},"front":{"type":"description","media":{},"description":"Petit-Déjeuner PDM"}},{"id":"ojs9v3867sdhbxb7q84kqkok","back":{"type":"description","media":{},"description":"Café, miel, dattes pour un boost d'énergie avant l'entraînement."},"front":{"type":"description","media":{},"description":"Collation Pré-Workout"}},{"id":"h2u317qqlwyv9cmly159mugw","back":{"type":"description","media":{},"description":"Glucides à IG bas, lipides, protéines à digestion lente (fromage blanc) pour diffusion nocturne."},"front":{"type":"description","media":{},"description":"Collation Soir"}},{"id":"wlnq26k5mzz0xsb7rhg6kmt8","back":{"type":"description","media":{},"description":"Dattes, bonbons, miel pour renflouer les stocks de glycogène après l'effort."},"front":{"type":"description","media":{},"description":"Glucides Post-Workout"}}],"family":"flashcard","variant":"flashcard","settings":{"cardMode":"WHITE","paddingTop":3,"quotesInline":false,"paddingBottom":3,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}},{"id":"cm3re1hs000903b7abca4gbj9","data":{},"type":"image","items":[{"id":"cm3re1hs200953b7asvlid3n4","media":{"image":{"key":"rise/courses/_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto/bQNhR99StAuyxopF-stock_image.jpg","type":"image","crushedKey":"3-de-l%C3%A9gumes.jpg","dimensions":{"originalWidth":640,"originalHeight":640},"originalUrl":"une-assiette-équilibrée-avec-du-poulet,-des-pomme-de-terre-sautées-et-1/3-de-légumes","sourcedFrom":"AI","useCrushedKey":true,"aiImageGenSettings":{"style":"minimalist style. simple, clean, uncluttered, modern, elegant","prompt":"une assiette équilibrée avec du poulet, des pomme de terre sautées et 1/3 de légumes","orientation":"square"}}},"caption":""},{"id":"cm3re1hs200963b7ae0va4tr8","media":{"image":{"key":"rise/courses/_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto/NlsyH1037GI8aVzf-stock_image.jpg","type":"image","crushedKey":"ew9SYq/3-de-l%C3%A9gumes.jpg","dimensions":{"originalWidth":640,"originalHeight":640},"originalUrl":"une-assiette-équilibrée-avec-de-la-viande-de-boeuf,-du-riz-et-1/3-de-légumes","sourcedFrom":"AI","useCrushedKey":true,"aiImageGenSettings":{"style":"minimalist style. simple, clean, uncluttered, modern, elegant","prompt":"une assiette équilibrée avec de la viande de boeuf, du riz et 1/3 de légumes","orientation":"square"}}},"caption":""},{"id":"cm3re1hs200973b7awwqva47v","media":{"image":{"key":"rise/courses/_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto/RKRoTahfISeLsDfj-stock_image.jpg","type":"image","crushedKey":"une-assiette-de-Chakchouka-qui-est-un-plat-traditionnel-%C3%A0-base-de-l%C3%A9gumes-vari%C3%A9s-%C3%A0-la-sauce-tomate-avec-.jpg","dimensions":{"originalWidth":1280,"originalHeight":720},"originalUrl":"une-assiette-de-Chakchouka-qui-est-un-plat-traditionnel-à-base-de-légumes-variés-à-la-sauce-tomate-avec-sur-le-dessus-4-oeufs-au","sourcedFrom":"AI","useCrushedKey":true,"aiImageGenSettings":{"style":"minimalist style. simple, clean, uncluttered, modern, elegant","prompt":"une assiette de Chakchouka qui est un plat traditionnel à base de légumes variés à la sauce tomate avec sur le dessus 4 oeufs au plats. accompagné de pain","orientation":"landscape"}}},"caption":""}],"family":"gallery","variant":"three column","settings":{"cardMode":"WHITE","paddingTop":3,"zoomOnClick":true,"quotesInline":false,"paddingBottom":3,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}},{"id":"cm3rfjfof00ec3b7axlqvcgwt","data":{},"type":"text","items":[{"id":"cm3rfjfof00ek3b7adh7z0rs7","heading":"<div data-editor-id=\"1dce2180-3709-4157-89f9-1b5ee8bfae22\"><p><strong>FAQ</strong></p></div>"}],"family":"text","variant":"heading","settings":{"cardMode":"WHITE","paddingTop":3,"quotesInline":false,"paddingBottom":0,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}},{"id":"cm3rfj4xl00dr3b7a3vbtg83x","data":{},"type":"list","items":[{"id":"nia8wpb7wpkhk6sn4pwad6t8","number":"1","paragraph":"<strong>Comment ajuster les glucides ?</strong> Pour optimiser la prise de masse, il est crucial de consommer des glucides à IG modéré à lent tout au long de la journée et des glucides à IG élevé autour de l'entraînement."},{"id":"nd0h0odev74b5go9rt4u2z6l","number":"2","paragraph":"<strong>Quelle est l'importance des protéines et des collations ?</strong> Assurez-vous que des collations protéinées sont présentes chaque jour pour soutenir la croissance musculaire et la récupération après l'entraînement."},{"id":"h4wbs56c1nfnq5z2485y3682","number":"3","paragraph":"<strong>Comment gérer les lipides dans l'alimentation ?</strong> Intégrez des sources de lipides saines comme les oléagineux dans votre alimentation pour augmenter l'apport calorique sans compromettre la qualité nutritionnelle."},{"id":"uq2edk1r571330y9sjhc79ca","number":"4","paragraph":"<strong>Quel est le bon timing des nutriments ?</strong> Le timing des nutriments est essentiel; consommez des protéines et des glucides rapides après l'entraînement pour maximiser la fenêtre anabolique."}],"family":"list","variant":"numbered","settings":{"cardMode":"WHITE","paddingTop":3,"quotesInline":false,"paddingBottom":3,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}}],"media":{},"piles":[],"settings":{},"duplicatedFromId":"","deleted":false,"createdAt":"2024-11-21T12:37:45.358Z","updatedAt":"2024-11-21T14:50:50.614Z","lastUpdatedBy":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","ready":true,"position":1,"transferredAt":null,"isPartnerContentAuthor":null,"headerImage":{},"sourceLessonLocaleId":null,"experiments":null,"description_vNext":"","title_vNext":"Nutrition pour la Prise de Masse"},{"id":"cm3rasdyf00043b7a72ne399u","originalId":null,"author":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","selectedAuthorId":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","courseId":"_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto","title":"Techniques d'entraînement pour la Prise de Masse","description":"","type":"blocks","icon":"Article","items":[{"id":"cm3rfky9j00f33b7an6e3cc14","data":{},"type":"text","items":[{"id":"fdt0qmnuby67i80wyda2o2ap","heading":"Méthode Allemande d'Entraînement","paragraph":"<p>La méthode allemande d'entraînement, également connue sous le nom de German Volume Training (GVT), est une technique populaire pour la prise de masse musculaire. Elle se caractérise par un volume d'entraînement élevé, souvent structuré en 10 séries de 10 répétitions pour chaque exercice. Cette approche vise à maximiser la congestion musculaire, un facteur clé de la croissance musculaire.</p><p>En suivant cette méthode, les athlètes utilisent généralement environ 60% de leur répétition maximale (1RM) pour compléter les séries. Cette charge modérée permet de maintenir une bonne forme tout en accumulant un volume de travail significatif. Le GVT est particulièrement efficace pour améliorer la force et la technique sur les exercices polyarticulaires, tels que les squats et les développés couchés.</p>"}],"family":"text","variant":"heading paragraph","settings":{"cardMode":"WHITE","paddingTop":3,"quotesInline":false,"paddingBottom":3,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}},{"id":"cm3rfnq2000fu3b7ae5oxaak8","data":{},"type":"interactive","items":[{"id":"87db4e92-cbdd-4995-b366-68138c57236b","title":"Introduction aux Drop Sets","description":"<p>Les drop sets sont une technique avancée de musculation utilisée pour pousser les muscles à leur limite. Cette méthode consiste à effectuer une série d'exercices jusqu'à l'échec, puis à réduire le poids et à continuer pour plus de répétitions. Le processus est répété plusieurs fois sans repos, ce qui le rend très efficace pour l'hypertrophie musculaire.</p><p></p><p>Les drop sets sont particulièrement utiles pour les bodybuilders et ceux qui cherchent à surmonter des plateaux. En défiant continuellement les muscles, cette technique favorise une plus grande croissance musculaire et endurance.</p>"},{"id":"1c79a9d8-1369-4e4e-bcaa-eab228f149cb","title":"Avantages des Drop Sets","description":"<p>L'un des principaux avantages des drop sets est l'augmentation de l'hypertrophie musculaire. En poussant les muscles au-delà de leurs limites habituelles, les drop sets stimulent davantage de fibres musculaires, entraînant une plus grande croissance. De plus, cette méthode peut améliorer l'endurance et la force musculaire au fil du temps.</p><p></p><p>Les drop sets offrent également un entraînement efficace en termes de temps, car ils permettent d'atteindre un niveau élevé de fatigue musculaire en moins de temps. Cela les rend idéaux pour les personnes ayant peu de temps pour s'entraîner.</p>"},{"id":"8ddb91a4-7e09-4810-9aa9-d53f62fa8cb1","title":"Comment Réaliser des Drop Sets","description":"<p>Pour réaliser un drop set, commencez par choisir un poids qui vous permet de compléter 8 à 12 répétitions jusqu'à l'échec. Une fois l'échec atteint, réduisez immédiatement le poids de 20 à 30 % et continuez autant de répétitions que possible. Répétez ce processus 2 à 3 fois, en fonction de votre niveau de forme physique et de vos objectifs.</p><p></p><p>Il est important de maintenir une forme correcte tout au long de l'exercice pour éviter les blessures. Assurez-vous d'être bien échauffé avant d'essayer les drop sets, car ils imposent un stress important aux muscles.</p>"},{"id":"24a925ec-ee38-4780-a902-9c53ae61b990","title":"Erreurs Courantes à Éviter","description":"<p>Une erreur courante lors de la réalisation de drop sets est d'utiliser trop de poids au départ, ce qui peut entraîner une mauvaise forme et un risque accru de blessure. Il est crucial de choisir un poids qui permet une exécution correcte de l'exercice. Une autre erreur est de ne pas réduire suffisamment le poids entre les séries, ce qui peut limiter l'efficacité de l'entraînement.</p><p></p><p>De plus, certaines personnes peuvent effectuer des drop sets trop fréquemment, ce qui entraîne un surentraînement et une récupération insuffisante. Il est recommandé d'incorporer les drop sets dans votre routine pas plus d'une ou deux fois par semaine pour permettre une récupération musculaire adéquate.</p>"}],"family":"interactive","variant":"accordion","settings":{"cardMode":"WHITE","paddingTop":3,"zoomOnClick":true,"quotesInline":false,"paddingBottom":3,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}},{"id":"cm3rfo7x800gj3b7abzzpupjq","data":{},"type":"text","items":[{"id":"cm3rfo7x900gr3b7aukg6ezdp","heading":"<div data-editor-id=\"4eab1ea8-5647-40c0-80e3-df3aa5f8bd99\"><p><strong>Exercice</strong></p></div>"}],"family":"text","variant":"heading","settings":{"cardMode":"WHITE","paddingTop":3,"quotesInline":false,"paddingBottom":0,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}}],"media":{},"piles":[],"settings":{},"duplicatedFromId":"","deleted":false,"createdAt":"2024-11-21T12:37:45.358Z","updatedAt":"2024-11-21T15:14:43.764Z","lastUpdatedBy":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","ready":true,"position":2,"transferredAt":null,"isPartnerContentAuthor":null,"headerImage":{},"sourceLessonLocaleId":null,"experiments":null,"description_vNext":"","title_vNext":"Techniques d'entraînement pour la Prise de Masse"},{"id":"cm3rasdyf00053b7a0sp7n479","originalId":null,"author":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","selectedAuthorId":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","courseId":"_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto","title":"Optimisation nutritionnelle et timing des aliments","description":"","type":"blocks","icon":"Article","items":[{"id":"cm3rfr1gm00ha3b7a8taluz9t","data":{},"type":"interactive","items":[{"id":"146b3f7c-3a62-4c0f-86d0-e3f28da0c001","type":"intro","media":{},"title":"Comprendre l'index glycémique","isHidden":false,"settings":[],"description":"<p>L'index glycémique (IG) est une mesure qui classe les glucides en fonction de leur impact sur la glycémie. Comprendre l'IG est essentiel pour optimiser la nutrition autour des entraînements et améliorer les performances sportives.</p>"},{"id":"409ea664-e26b-4602-82bc-d1934dba963a","type":"step","media":{},"title":"Définition de l'index glycémique","isHidden":false,"settings":[],"description":"<p>L'index glycémique (IG) est une valeur attribuée aux aliments contenant des glucides, indiquant leur effet sur le niveau de sucre dans le sang. Les aliments à IG élevé provoquent une augmentation rapide de la glycémie, tandis que ceux à IG bas entraînent une élévation plus lente et stable.</p><p>Il est crucial de comprendre cette distinction pour faire des choix alimentaires judicieux, notamment pour les athlètes et les personnes cherchant à optimiser leur performance physique. En choisissant des aliments à IG approprié, on peut mieux gérer l'énergie disponible avant, pendant et après l'entraînement.</p>"},{"id":"e57fe3b6-3229-45e5-a444-46681376e45f","type":"step","media":{},"title":"Impact sur la performance","isHidden":false,"settings":[],"description":"<p>Les aliments à IG élevé sont particulièrement utiles avant l'entraînement pour fournir un boost d'énergie rapide. Par exemple, consommer des dattes ou du miel avant une séance peut améliorer la performance en augmentant rapidement les niveaux de glucose dans le sang.</p><p>En revanche, les aliments à IG bas sont plus adaptés pour maintenir un niveau d'énergie stable tout au long de la journée. Ils aident à éviter les pics et les chutes de glycémie, ce qui peut prévenir la fatigue et améliorer la concentration et l'endurance.</p>"},{"id":"71938588-5910-4865-a5ec-a2bbd4c617cf","type":"step","media":{},"title":"Choix des aliments avant l'entraînement","isHidden":false,"settings":[],"description":"<p>Avant l'entraînement, il est recommandé de consommer des glucides à IG élevé pour un apport rapide en énergie. Des exemples d'aliments à consommer incluent les bonbons Haribo, le miel et les dattes. Ces aliments permettent de maximiser les réserves de glycogène et de préparer le corps à l'effort physique intense.</p><p>Il est également bénéfique de combiner ces glucides avec une source de caféine, comme le café, pour potentialiser l'effet énergisant. Cette combinaison peut améliorer la vigilance et la performance globale durant l'entraînement.</p>"},{"id":"0e6ae886-6e32-4ca4-ba49-0d3c40e225bc","type":"step","media":{},"title":"Choix des aliments après l'entraînement","isHidden":false,"settings":[],"description":"<p>Après l'entraînement, il est crucial de consommer des glucides à IG élevé pour profiter de la fenêtre anabolique. Cette période est idéale pour la récupération musculaire et la reconstitution des réserves de glycogène. Des aliments comme les bonbons Haribo, le miel et les dattes sont recommandés.</p><p>Associer ces glucides rapides à une source de protéines permet d'optimiser la synthèse protéique et d'accélérer la récupération. Par exemple, un shake protéiné avec du miel peut être une excellente option post-entraînement.</p>"},{"id":"2582065a-76e5-49e3-a85d-29615b25ed26","type":"summary","media":{},"title":"Application pratique de l'IG","isHidden":false,"settings":[],"description":"<p>Comprendre et appliquer l'index glycémique dans la nutrition autour des entraînements peut significativement améliorer les performances et la récupération. En choisissant judicieusement les aliments à consommer avant et après l'effort, on peut maximiser les bénéfices de chaque séance d'entraînement.</p>"}],"family":"interactive-fullscreen","variant":"process","settings":{"cardMode":"WHITE","mediaWidth":"1","paddingTop":3,"zoomOnClick":true,"quotesInline":false,"paddingBottom":3,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"#f5f5f5","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}}],"media":{},"piles":[],"settings":{},"duplicatedFromId":"","deleted":false,"createdAt":"2024-11-21T12:37:45.358Z","updatedAt":"2024-11-21T14:56:40.693Z","lastUpdatedBy":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","ready":true,"position":3,"transferredAt":null,"isPartnerContentAuthor":null,"headerImage":{},"sourceLessonLocaleId":null,"experiments":null,"description_vNext":"","title_vNext":"Optimisation nutritionnelle et timing des aliments"},{"id":"cm3rasdyf00063b7a0uxg0piv","originalId":null,"author":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","selectedAuthorId":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","courseId":"_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto","title":"Bonus : Analyse morpho anatomique","description":"","type":"blocks","icon":"Article","items":[{"id":"cm3rfsxaa00hv3b7a5o8xo8qs","data":{},"type":"text","items":[{"id":"n5efdh0ld9t3bll7ez4oeo0p","heading":"Explication Analyse Morpho Anatomique","paragraph":"<p>L'analyse morpho-anatomique est une méthode essentielle pour comprendre la structure et la fonction du corps humain. Elle permet aux coachs de personnaliser les programmes d'entraînement en fonction des caractéristiques individuelles de chaque client. En évaluant des aspects tels que la morphologie, la posture et les déséquilibres musculaires, les coachs peuvent élaborer des plans d'entraînement plus efficaces et sécurisés.</p>\n<p>Cette analyse est particulièrement utile pour les clients en prise de masse, car elle aide à identifier les zones nécessitant une attention particulière. Par exemple, un déséquilibre musculaire peut être corrigé pour éviter les blessures et optimiser les gains musculaires. En intégrant cette approche, les coachs peuvent offrir un accompagnement plus précis et adapté, maximisant ainsi les résultats de leurs clients.</p>"}],"family":"text","variant":"heading paragraph","settings":{"cardMode":"WHITE","paddingTop":3,"quotesInline":false,"paddingBottom":3,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}},{"id":"cm3rfz5vn00ji3b7alnxwsh7j","data":{},"type":"text","items":[{"id":"cm3rfz5vo00jq3b7a5se4jet3","heading":"<div data-editor-id=\"a9b59521-9016-4e7d-9664-8f28b2ad8989\"><p><strong>Les différents morphotypes</strong></p></div>"}],"family":"text","variant":"heading","settings":{"cardMode":"WHITE","paddingTop":3,"quotesInline":false,"paddingBottom":0,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}},{"id":"cm3rfu03900im3b7a78xg2ccv","data":{},"type":"interactive","items":[{"id":"e5b511bd-4b6f-4c43-9037-0d7cda73ab13","media":{"image":{"key":"rise/courses/_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto/EqZMSBRbRiYKejDD-Capture%2520d%25E2%2580%2599e%25CC%2581cran%25202024-11-21%2520a%25CC%2580%252016.01.01.png","type":"image","align":"center","fillWidth":false,"crushedKey":"Capture%20d%E2%80%99e%CC%81cran%202024-11-21%20a%CC%80%2016.01.01.jpg","dimensions":{"originalWidth":272,"originalHeight":570},"trackingId":"cm3rfu03900im3b7a78xg2ccv","originalUrl":"Capture d’écran 2024-11-21 à 16.01.01.png","sourcedFrom":"USER","useCrushedKey":true,"trackingContext":"block:tabs"}},"title":"Ectomorphe","description":"<p>Les ectomorphes sont généralement caractérisés par une silhouette mince et élancée. Ils ont souvent des membres longs et une faible masse musculaire. Leur métabolisme rapide rend difficile la prise de poids, qu'il s'agisse de graisse ou de muscle.</p><p></p><p>Pour les ectomorphes, il est crucial de consommer un surplus calorique et de se concentrer sur des exercices de musculation lourds pour stimuler la croissance musculaire. Une alimentation riche en protéines et en glucides complexes est recommandée pour soutenir leurs objectifs de prise de masse.</p>"},{"id":"2e53724e-9c8c-400b-b091-4600af5158f0","media":{"image":{"key":"rise/courses/_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto/3OSdmJRuexl2xw9z-Capture%2520d%25E2%2580%2599e%25CC%2581cran%25202024-11-21%2520a%25CC%2580%252016.01.08.png","type":"image","align":"center","fillWidth":false,"crushedKey":"Capture%20d%E2%80%99e%CC%81cran%202024-11-21%20a%CC%80%2016.01.08.jpg","dimensions":{"originalWidth":246,"originalHeight":578},"trackingId":"cm3rfu03900im3b7a78xg2ccv","originalUrl":"Capture d’écran 2024-11-21 à 16.01.08.png","sourcedFrom":"USER","useCrushedKey":true,"trackingContext":"block:tabs"}},"title":"Mésomorphe","description":"<p>Les mésomorphes possèdent une structure corporelle naturellement athlétique avec une bonne proportion de muscles et de graisse. Ils gagnent facilement du muscle et perdent de la graisse avec un entraînement et une alimentation appropriés. Leur métabolisme est généralement équilibré, ce qui facilite la gestion de leur poids.</p><p></p><p>Pour maximiser leur potentiel, les mésomorphes devraient suivre un programme d'entraînement varié qui inclut à la fois des exercices de musculation et de cardio. Une alimentation équilibrée avec une bonne répartition des macronutriments est essentielle pour maintenir leur physique athlétique.</p>"},{"id":"92a567da-32ee-440b-a374-1263fb9356df","media":{"image":{"key":"rise/courses/_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto/e0Ni5otgUfurq-Cr-Capture%2520d%25E2%2580%2599e%25CC%2581cran%25202024-11-21%2520a%25CC%2580%252016.01.15.png","type":"image","align":"center","fillWidth":false,"crushedKey":"Capture%20d%E2%80%99e%CC%81cran%202024-11-21%20a%CC%80%2016.01.15.jpg","dimensions":{"originalWidth":236,"originalHeight":568},"trackingId":"cm3rfu03900im3b7a78xg2ccv","originalUrl":"Capture d’écran 2024-11-21 à 16.01.15.png","sourcedFrom":"USER","useCrushedKey":true,"trackingContext":"block:tabs"}},"title":"Endomorphe","description":"<p>Les endomorphes ont tendance à avoir une silhouette plus ronde avec une accumulation de graisse plus facile. Ils ont souvent un métabolisme plus lent, ce qui peut rendre la perte de poids plus difficile. Cependant, ils peuvent également gagner du muscle assez facilement avec le bon type d'entraînement.</p><p></p><p>Pour les endomorphes, il est important de se concentrer sur une alimentation contrôlée en calories et riche en protéines pour favoriser la perte de graisse tout en préservant la masse musculaire. Un mélange d'exercices de musculation et de cardio est recommandé pour améliorer leur composition corporelle.</p>"}],"family":"interactive","variant":"tabs","settings":{"cardMode":"WHITE","paddingTop":3,"zoomOnClick":true,"quotesInline":false,"paddingBottom":3,"paddingLinked":true,"backgroundType":"LIGHT","backgroundColor":"","entranceAnimation":true,"markerColorContrast":"AUTO","snippetColorContrast":"AUTO","customBackgroundColorContrast":"AUTO"},"background":{"media":{"image":{"type":"image","sourcedFrom":"DEFAULT","useCrushedKey":false}}}}],"media":{},"piles":[],"settings":{},"duplicatedFromId":"","deleted":false,"createdAt":"2024-11-21T12:37:45.358Z","updatedAt":"2024-11-21T15:03:09.188Z","lastUpdatedBy":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","ready":true,"position":4,"transferredAt":null,"isPartnerContentAuthor":null,"headerImage":{},"sourceLessonLocaleId":null,"experiments":null,"description_vNext":"","title_vNext":"Bonus : Analyse morpho anatomique"}],"jobs":[],"labelSetId":"RE78RgPWsRIf-6xms_LCqnUz","deleted":false,"createdAt":"2024-11-21T12:29:51.113Z","updatedAt":"2024-11-21T15:25:51.284Z","markComplete":false,"isDefault":false,"ready":true,"reviewId":"","exportSettings":{"title":"Formation pour coachs en prise de masse","format":"zip","quizId":null,"target":"scorm12","shareId":"oBGvW4G_mT9Wl_ZioI-a6BurF_euVDAm","activeLMS":0,"reporting":"passed-incomplete","exportType":"raw","identifier":"_BW5Xkm0cTROQ7YUpnCAaTu0M7vG3mto_rise","targetName":"SCORM 1.2","storylineId":null,"completeWith":"reporting","quizComplete":false,"activeEdition":0,"disableCoverPage":false,"enableExitCourse":false,"resetLearnerData":false,"updateResumeData":true,"storylineComplete":false,"completionPercentage":100},"headingTypefaceId":"z1yBqroMb5fBYVkXp71dGT6eNpYPHXf_","bodyTypefaceId":"z1yBqroMb5fBYVkXp71dGT6eNpYPHXf_","uiTypefaceId":"z1yBqroMb5fBYVkXp71dGT6eNpYPHXf_","sidebarMode":"open","tenantId":"569b5006-9137-445b-b442-4c204fa811e2","showLessonCount":true,"showNavigationButtons":true,"allowSearch":true,"animateBlockEntrance":true,"transferredAt":null,"allowCopy":false,"enableVideoPlaybackSpeed":null,"jobType":null,"partnerContentId":null,"cardImage":{},"theme":{"themeId":"organic","navigation":true,"showAuthor":true,"allowSearch":true,"colorAccent":"#00ffa3","blockCorners":"ROUNDED","buttonScheme":"LIGHT","uiTypefaceId":"_vy9IVqRPwz6wQlKi0wsA9dsYpZ7gsQ3","coverPageType":"LEFT_OVERLAY","accentContrast":"AUTO","bodyTypefaceId":"Wstu1lVkR_rUsAuU6x1N_UImwchzygj2","navigationType":"COMPACT","blockPaddingTop":40,"coverImageAlpha":50,"navigationStyle":"LIGHT_IMAGE","showLessonCount":true,"lessonHeaderSize":"MEDIUM","buttonInlineStyle":"ROUNDED","coverImageDefault":"https://cdn.articulate.com/assets/rise/assets/themes/classic/cover-image/27_creative.jpg","headingTypefaceId":"_vy9IVqRPwz6wQlKi0wsA9dsYpZ7gsQ3","hideLessonHeaders":false,"lessonHeaderColor":null,"lessonHeaderStyle":"BLACK","sidebarStartsOpen":true,"blockPaddingBottom":40,"markLessonsComplete":false,"animateBlockEntrance":true,"navigationRestricted":false,"buttonNavigationStyle":"FULL","showNavigationButtons":true,"compactShowLessonCount":true,"lessonHeaderImageAlpha":0.7,"lessonHeaderImageColor":"DARK","enableVideoPlaybackSpeed":true,"customColorLessonHeaderContrast":"AUTO"},"lessonHeaderImage":{},"overlayNavigationImage":{},"type":null,"locale":null,"sourceCourseLocaleId":null,"experiments":null,"settings":{},"defaultLocaleId":null,"description_vNext":"Cette formation vise à rendre les coachs pleinement opérationnels pour accompagner des clients en prise de masse. Les participants apprendront à élaborer des plans nutritionnels efficaces, à ajuster les régimes alimentaires en fonction des besoins individuels, et à optimiser l'apport en macronutriments pour maximiser les gains musculaires. Conçue pour les coachs de tous niveaux, cette formation offre des stratégies pratiques et des techniques avancées pour améliorer les performances des clients. À la fin du cours, les coachs seront capables de fournir un accompagnement personnalisé et de haute qualité, garantissant des résultats optimaux pour leurs clients.","title_vNext":"Formation pour coachs en prise de masse","features":{"rise-course-navigation":true,"rise-scenario-a-11-y":true,"rise-timed-quizzes":true},"authors":[{"id":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","avatar":"small.png","authorName":"Magali Declerk"}],"bodyTypeface":"Inter","headingTypeface":"Inter","uiTypeface":"Inter","lmsOptions":{"enableExitCourse":false,"disableCoverPage":false},"mondrian":{}},"labelSet":{"id":"RE78RgPWsRIf-6xms_LCqnUz","author":"aid|1d977a36-082c-48fb-a383-5b061718f6f9","name":"French","defaultId":3,"defaultSet":true,"labels":{"a11yAnswerLive":"Votre réponse","a11yAuthorPrefix":"Par","a11yBlockChartBar":"Graphique à barres","a11yBlockChartLine":"Graphique en courbes","a11yBlockChartPie":"Graphique en secteurs","a11yBlockCode":"Code","a11yBlockEmbed":"Contenu intégré","a11yBlockFlashcardBack":"Verso de la carte","a11yBlockFlashcardFront":"Recto de la carte","a11yBlockFlashcardGrid":"Grille de cartes flash","a11yBlockFlashcardStack":"Carrousel de cartes flash","a11yBlockImageCarousel":"Carrousel d'images","a11yBlockImageCarouselRoleDescription":"Carrousel","a11yBlockImageCarouselSlideControls":"Boutons de contrôle des diapositives","a11yBlockImageCarouselSlideControlsGoToNext":"Allez à la diapositive suivante","a11yBlockImageCarouselSlideControlsGoToPrevious":"Allez à la diapositive précédente","a11yBlockImageCarouselSlideControlsGoToSlide":"Allez à la diapositive","a11yBlockImageCarouselSlidePreposition":"sur","a11yBlockImageCarouselSlideRoleDescription":"Diapositive","a11yBlockKnowledgeCheck":"Test de connaissances","a11yBlockKnowledgeCheckFIB":"Test de connaissances : texte à trous","a11yBlockKnowledgeCheckM":"Test de connaissances : concordance","a11yBlockKnowledgeCheckMC":"Test de connaissances : question à réponse unique","a11yBlockKnowledgeCheckMR":"Test de connaissances : question à réponses multiples","a11yBlockQuoteCarousel":"Carrousel de citations","a11yBlockQuoteCarouselRoleDescription":"Carrousel","a11yBlockQuoteCarouselSlideControls":"Boutons de contrôle des diapositives","a11yBlockQuoteCarouselSlideControlsGoToNext":"Allez à la diapositive suivante","a11yBlockQuoteCarouselSlideControlsGoToPrevious":"Allez à la diapositive précédente","a11yBlockQuoteCarouselSlideControlsGoToSlide":"Allez à la diapositive","a11yBlockQuoteCarouselSlidePreposition":"sur","a11yBlockQuoteCarouselSlideRoleDescription":"Diapositive","a11yBlockStoryline":"Storyline","a11yBlockTimeline":"Frise chronologique","a11yCarouselNext":"Suivant","a11yCarouselPrevious":"Précédent","a11yCertificateDownloadFailed":"Le téléchargement de l'attestation a échoué","a11yCorrectLive":"Bonne réponse","a11yCoverCourseCompleted":"Module terminé","a11yCoverCourseLength":"Durée du module","a11yCoverRequirementComplete":"Condition satisfaite","a11yCoverRequirementFailed":"Condition non satisfaite","a11yCoverRequirementIncomplete":"Echec de la condition","a11yExcelIcon":"Feuille de calcul Microsoft Excel","a11yFileIcon":"Fichier","a11yGroupAudioPlayer":"Lecteur audio","a11yGroupVideoPlayer":"Lecteur vidéo","a11yLabeledGraphicBlock":"Image interactive","a11yLabeledGraphicButtonMarker":"Marqueur","a11yLabeledGraphicIconArrowDown":"Flèche vers le bas","a11yLabeledGraphicIconArrowDownLeft":"Flèche vers le bas et la gauche","a11yLabeledGraphicIconArrowDownRight":"Flèche vers le bas et la droite","a11yLabeledGraphicIconArrowLeft":"Flèche gauche","a11yLabeledGraphicIconArrowRight":"Flèche droite","a11yLabeledGraphicIconArrowUp":"Flèche vers le haut","a11yLabeledGraphicIconArrowUpLeft":"Flèche vers le haut et la gauche","a11yLabeledGraphicIconArrowUpRight":"Flèche vers le haut et la droite","a11yLabeledGraphicIconCheck":"Coche","a11yLabeledGraphicIconDot":"Point","a11yLabeledGraphicIconHeart":"Cœur","a11yLabeledGraphicIconInformation":"Information","a11yLabeledGraphicIconPin":"Repère de plan","a11yLabeledGraphicIconPlus":"Plus","a11yLabeledGraphicIconQuestion":"Point d'interrogation","a11yLabeledGraphicIconX":"X","a11yLabeledGraphicUnviewed":"Non visité","a11yLabeledGraphicViewed":"Visité","a11yMediaPause":"Pause","a11yMediaPlay":"Lire","a11yMediaSeek":"Avancer ou reculer","a11yNavigationMenuClose":"Fermer le menu","a11yNavigationMenuOpen":"Ouvrir le menu","a11yPageMarker":"Haut de la page","a11yPDFIcon":"Fichier PDF","a11yPPTIcon":"Présentation PowerPoint","a11yQuizFailed":"Echoué","a11yQuizFeedback":"Retour","a11yQuizPassed":"Réussi","a11yQuizReviewCorrectlyChecked":"Sélection correcte","a11yQuizReviewCorrectlySelected":"Sélection correcte","a11yQuizReviewCorrectlyUnchecked":"Non-sélection correcte","a11yQuizReviewCorrectlyUnselected":"Non-sélection correcte","a11yQuizReviewIncorrectlyChecked":"Sélection incorrecte","a11yQuizReviewIncorrectlySelected":"Sélection incorrecte","a11yQuizReviewIncorrectlyUnchecked":"Non-sélection incorrecte","a11yQuizReviewIncorrectlyUnselected":"Non-sélection incorrecte","a11yRegionMainLesson":"Contenu de la leçon","a11yRegionMainOverview":"Aperçu du cours","a11yRegionNavLesson":"Menu de navigation","a11yRegionNavOverview":"Table des matières","a11yRestrictedNav":"Cette leçon est actuellement indisponible","a11yRTFIcon":"Fichier texte enrichi","a11ySearchClose":"Fermer la barre de recherche","a11ySearchInput":"Rechercher","a11ySearchOpen":"Ouvrir la barre de recherche","a11yStatusAdditionalContent":"Du contenu supplémentaire a été chargé","a11yStatusContinued":"Bouton \"Continuer\" activé","a11yUnzoomImage":"Dézoomer l'image","a11yWordIcon":"Document Microsoft Word","a11yZipIcon":"Archive ZIP","a11yZoomImage":"Zoomer l'image","blocksClickToFlip":"Cliquez pour retourner","blocksPreposition":"sur","certificateDownload":"Télécharger l'attestation","certificateDownloadInProgress":"En cours de chargement...","certificateRetryDownload":"Réessayer de télécharger","courseExit":"QUITTER LE MODULE","courseHome":"Accueil","courseResume":"REPRENDRE LE MODULE","courseSkipToLesson":"Aller à la leçon","courseStart":"COMMENCER LE MODULE","coverCompleteAllLessons":"Terminer tous les chapitres de ce module","coverCompleted":"Terminé","coverCompleteLessonsInCourse":"chapitres de ce module","coverCompleteLessonsName":"Terminer","coverCompleteLessonsPreposition":"sur","coverCourseRequirements":"Conditions de réussite du module","coverHour":"Heure","coverHours":"Heures","coverLesson":"Chapitre","coverLessons":"Chapitres","coverMinute":"Minute","coverMinutes":"Minutes","coverNoAttemptsRemaining":"Aucune tentative restante","coverPublished":"Publié","coverQuizPercentOrHigher":"% ou plus","coverQuizScoreOf":"Résultat de","curtainLoading":"Votre contenu est en cours de chargement.","curtainOffline":"Votre ordinateur est déconnecté.","curtainOfflineReconnecting":"Tentative de reconnexion...","curtainSessionTimedOut":"Votre session a expiré.","curtainSessionTimedOutRefresh":"Actualiser","curtainSessionTimedOutRestart":"Cliquez sur Actualiser pour redémarrer votre session.","curtainSomethingWrong":"Quelque chose n'a pas fonctionné.","curtainSomethingWrongRefresh":"Actualiser","curtainSomethingWrongTryAgain":"Cliquez pour actualiser et réessayer.","embedLinkGroup":"Contenu Web intégré","embedPlayerGroup":"Lecteur multimédia intégré","embedReadMore":"En savoir plus","embedViewOn":"Regarder","exitMessage":"Vous pouvez maintenant fermer cette page.","labeledGraphicMarkerLabel":"Marqueur graphique étiqueté","lessonComplete":"TERMINÉ","lessonName":"Leçon","lessonPreposition":"sur","lessonRestricted":"Les leçons doivent être complétées dans l’ordre","noResults":"Pas de résultats pour","numberedDividerGroup":"Séparateur numéroté","overviewPageTitleSuffix":"Sommaire","pauseButtonLabel":"Pause","playButtonLabel":"Jouer","processComplete":"Terminée","processLandmark":"Processus","processLessonName":"Leçon","processNextStep":"ÉTAPE SUIVANTE","processStart":"COMMENCER","processStartAgain":"RECOMMENCER","processStepName":"Étape","processStepPreposition":"sur","processSwipe":"Glisser pour continuer","progressPieClickToComplete":"Cliquer pour terminer","progressPieClickToReset":"Cliquer pour réinitialiser","progressPieCompleted":"Terminé","progressPieQuizFailed":"Echoué","progressPieUnstarted":"Non commencé","progressSummary":"Résumé de la progression","progressSummaryBackToLearning":"Retour à ma formation","progressSummaryCompleted":"Terminé :","progressSummaryCongratulations":"Félicitations !","progressSummaryNextUp":"La suite","progressSummaryNoTitle":"(Sans Titre)","progressSummaryPercentComplete":"% terminé","progressSummaryRequirementsMet":"Vous avez rempli toutes les conditions d'achèvement","progressSummaryStartOver":"Recommencer","quizAcceptableResponses":"Bonnes réponses possibles","quizAnswerPlaceholder":"Tapez votre réponse ici","quizContinue":"Continuer","quizCorrect":"Correct","quizIncorrect":"Incorrect","quizNext":"SUIVANT","quizPassing":"RÉUSSITE","quizQuestion":"Question","quizRequireAnswer":"Veuillez répondre à la question pour continuer","quizRequirePassingScore":"Doit réussir le quiz avant de continuer","quizRestart":"Restart","quizResults":"Résultats du quiz","quizScore":"Votre score","quizStart":"COMMENCER LE QUIZ","quizSubmit":"VALIDER","quizTakeAgain":"RECOMMENCER","quizTimerElapsed":"Temps écoulé","quizTimerExpired":"Temps expiré","quizTimerExpiredAction":"OK","quizTimerExpiredMessage":"Vous avez atteint la limite de temps pour ce quiz. Vos résultats seront automatiquement validés.","quizTimerHide":"Cacher","quizTimerLimit":"Limite de temps","quizTimerMinute":"Minute","quizTimerMinutePlural":"Minutes","quizTimerRemaining":"Temps restant","quizTimerShow":"Afficher le minuteur","result":"résultat","results":"résultats","salutation":"👋 Au revoir!","scenarioComplete":"Scénario Complet!","scenarioContinue":"CONTINUER","scenarioStartOver":"RECOMMENCER","scenarioTryAgain":"RÉESSAYER","search":"Rechercher","seekSliderLabel":"Chercher","sortingCardsCorrect":"Cartes correctes","sortingLandmark":"Activité de tri","sortingReplay":"REJOUER"},"deleted":false,"createdAt":"2024-11-08T12:14:06.524Z","updatedAt":"2024-11-08T12:14:06.524Z","iso639Code":"fr","transferredAt":null},"fonts":[{"id":"z1yBqroMb5fBYVkXp71dGT6eNpYPHXf_","name":"Inter","default":true,"key":"assets/rise/fonts/Inter-Medium.woff","style":"normal","weight":"500"},{"id":"z1yBqroMb5fBYVkXp71dGT6eNpYPHXf_","name":"Inter","default":true,"key":"assets/rise/fonts/Inter-Black.woff","style":"normal","weight":"900"},{"id":"z1yBqroMb5fBYVkXp71dGT6eNpYPHXf_","name":"Inter","default":true,"key":"assets/rise/fonts/Inter-Bold.woff","style":"normal","weight":"700"},{"id":"z1yBqroMb5fBYVkXp71dGT6eNpYPHXf_","name":"Inter","default":true,"key":"assets/rise/fonts/Inter-Regular.woff","style":"normal","weight":"400"},{"id":"z1yBqroMb5fBYVkXp71dGT6eNpYPHXf_","name":"Inter","default":true,"key":"assets/rise/fonts/Inter-Light.woff","style":"normal","weight":"300"}],"media":[]}")